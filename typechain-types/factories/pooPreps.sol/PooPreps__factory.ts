/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PooPreps, PooPrepsInterface } from "../../pooPreps.sol/PooPreps";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaxCumulativeBalanceExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_abTrigger",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_exponentialInc",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getMaxCumulativeBalanceForAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "setRouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600080546001600160a01b03191633179055604080518082019091526005815264504f4f504560d81b60208201526008906200004f90826200034c565b5060408051808201909152600681526524504f4f504560d01b60208201526009906200007c90826200034c565b50600a805460ff19166012178155336000908152600160209081526040918290206c054e739ef2d4e77128a290000090819055600455600780546001600160a81b03191674c36442b4a4522e871399cd717abdd847ab11fe8800179055815161036081018352928352600f90830152601490820152601e606082015260326080820152604b60a0820152606460c082015261012c60e08201526101f46101008201526102586101208201526102bc61014082015261032061016082018190526103e86101808301526107d06101a0830152610fa06101c08301526117706101e0830152611f40610200830152612710610220830152613a98610240830152614e2061026083015261c350610280830152620138806102a0830152620186a06102c083015262030d406102e0830152620493e061030083015262061a80908201526207a120610340820152620001d690600690601b620001dd565b5062000418565b82805482825590600052602060002090600901600a900481019282156200027e5791602002820160005b838211156200024b57835183826101000a81548162ffffff021916908362ffffff160217905550926020019260030160208160020104928301926001030262000207565b80156200027c5782816101000a81549062ffffff02191690556003016020816002010492830192600103026200024b565b505b506200028c92915062000290565b5090565b5b808211156200028c576000815560010162000291565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002d257607f821691505b602082108103620002f357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034757600081815260208120601f850160051c81016020861015620003225750805b601f850160051c820191505b8181101562000343578281556001016200032e565b5050505b505050565b81516001600160401b03811115620003685762000368620002a7565b6200038081620003798454620002bd565b84620002f9565b602080601f831160018114620003b857600084156200039f5750858301515b600019600386901b1c1916600185901b17855562000343565b600085815260208120601f198616915b82811015620003e957888601518255948401946001909101908401620003c8565b5085821015620004085787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610e7380620004286000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a9059cbb11610071578063a9059cbb14610261578063cc6862f814610274578063d54f7d5e14610281578063dd62ed3e14610289578063fee406d5146102c257600080fd5b806370a082311461020a57806392eefe9b1461023357806395d89b4114610246578063a457c2d71461024e57600080fd5b80633018205f116100e95780633018205f14610181578063313ce567146101a657806339509351146101bb57806341cb87fc146101ce5780636dcc431f146101e357600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102d5565b6040516101309190610bbc565b60405180910390f35b61014c610147366004610c26565b610367565b6040519015158152602001610130565b6004545b604051908152602001610130565b61014c61017c366004610c50565b61037e565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610130565b600a5460405160ff9091168152602001610130565b61014c6101c9366004610c26565b6103cf565b6101e16101dc366004610c8c565b610405565b005b6101f66101f1366004610ca7565b610460565b60405162ffffff9091168152602001610130565b610160610218366004610c8c565b6001600160a01b031660009081526001602052604090205490565b6101e1610241366004610c8c565b610499565b610123610567565b61014c61025c366004610c26565b610576565b61014c61026f366004610c26565b6105ac565b60075461014c9060ff1681565b61018e6105b9565b610160610297366004610cc0565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6101606102d0366004610c8c565b6105f9565b6060600880546102e490610cf3565b80601f016020809104026020016040519081016040528092919081815260200182805461031090610cf3565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050905090565b6000610374338484610794565b5060015b92915050565b600061038b8484846108b9565b6001600160a01b0384166000908152600360209081526040808320338085529252909120546103c59186916103c09086610ae9565b610794565b5060019392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490916103749185906103c09086610b0c565b6000546001600160a01b031633146104385760405162461bcd60e51b815260040161042f90610d2d565b60405180910390fd5b600780546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6006818154811061047057600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b6000546001600160a01b031633146104c35760405162461bcd60e51b815260040161042f90610d2d565b6001600160a01b03811661050c5760405162461bcd60e51b815260206004820152601060248201526f4552525f5a45524f5f4144445245535360801b604482015260640161042f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6060600980546102e490610cf3565b3360008181526003602090815260408083206001600160a01b038716845290915281205490916103749185906103c09086610ae9565b60006103743384846108b9565b600080546001600160a01b031633146105e45760405162461bcd60e51b815260040161042f90610d2d565b5060075461010090046001600160a01b031690565b60075460009060ff16158061062757506019600554436106199190610d6f565b610624906001610d82565b10155b1561063457600454610378565b6040516bffffffffffffffffffffffff19606084901b16602082015269038f98e1390378c00000906000906034016040516020818303038152906040529050600081600183516106849190610d6f565b8151811061069457610694610d95565b016020015160f81c9050600160068290036106b157506032610716565b8160ff166098036106c45750602d610716565b8160ff1660aa036106d757506030610716565b8160ff1660c1036106ea5750602a610716565b8160ff1660da036106fd5750602c610716565b610708603183610dc1565b610713906001610de3565b90505b61078a8160ff166107846006600554436107309190610d6f565b61073b906001610d82565b8154811061074b5761074b610d95565b90600052602060002090600a91828204019190066003029054906101000a900462ffffff1662ffffff1687610b2a90919063ffffffff16565b90610b2a565b9695505050505050565b6001600160a01b0383166107f65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161042f565b6001600160a01b0382166108575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042f565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661091d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042f565b6001600160a01b03821661097f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042f565b60075460ff168015610998575061099582610b60565b81115b156109b657604051635f8c625960e01b815260040160405180910390fd5b60075460ff161580156109d657506c03c95a2f0b4856475fe00000008110155b156109f1576109f1436005556007805460ff19166001179055565b6001600160a01b038316600090815260016020526040902054610a149082610ae9565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610a439082610b0c565b6001600160a01b03831660009081526001602052604090205560075460ff1615610aa4576001600160a01b038216600090815260026020526040902054610a8a9082610b0c565b6001600160a01b0383166000908152600260205260409020555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108ac91815260200190565b600082821115610afb57610afb610dfc565b610b058284610d6f565b9392505050565b6000610b188284610d82565b90508281101561037857610378610dfc565b600082600003610b3c57506000610378565b610b468284610e12565b905081610b538483610e29565b1461037857610378610dfc565b600080610b6c836105f9565b6001600160a01b038416600090815260026020526040902054909150811115610bb3576001600160a01b038316600090815260026020526040902054610b05908290610ae9565b50600092915050565b600060208083528351808285015260005b81811015610be957858101830151858201604001528201610bcd565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c2157600080fd5b919050565b60008060408385031215610c3957600080fd5b610c4283610c0a565b946020939093013593505050565b600080600060608486031215610c6557600080fd5b610c6e84610c0a565b9250610c7c60208501610c0a565b9150604084013590509250925092565b600060208284031215610c9e57600080fd5b610b0582610c0a565b600060208284031215610cb957600080fd5b5035919050565b60008060408385031215610cd357600080fd5b610cdc83610c0a565b9150610cea60208401610c0a565b90509250929050565b600181811c90821680610d0757607f821691505b602082108103610d2757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526012908201527122a9292fa727aa2fa1a7a72a2927a62622a960711b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561037857610378610d59565b8082018082111561037857610378610d59565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600060ff831680610dd457610dd4610dab565b8060ff84160691505092915050565b60ff818116838216019081111561037857610378610d59565b634e487b7160e01b600052600160045260246000fd5b808202811582820484141761037857610378610d59565b600082610e3857610e38610dab565b50049056fea26469706673582212205116ec2c96a9fb39fe48996be1959c146c40134b2b1c39177e03f46ede770c6464736f6c63430008120033";

type PooPrepsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PooPrepsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PooPreps__factory extends ContractFactory {
  constructor(...args: PooPrepsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PooPreps> {
    return super.deploy(overrides || {}) as Promise<PooPreps>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PooPreps {
    return super.attach(address) as PooPreps;
  }
  override connect(signer: Signer): PooPreps__factory {
    return super.connect(signer) as PooPreps__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PooPrepsInterface {
    return new utils.Interface(_abi) as PooPrepsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PooPreps {
    return new Contract(address, _abi, signerOrProvider) as PooPreps;
  }
}
